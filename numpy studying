import numpy as np
import time
liste=[1,2,3,4,5,6]
npliste=np.array([1,2,3,4,5,6])

baslangic=time.time()
milyon=[]
for a in range(1000000):
  milyon.append(a)
bitis=time.time()
sure=bitis-baslangic
print(sure)

npmilyon=np.arange(1000000)

start=time.time()
milyonkup=[]
for a in range(1000000):
  a=a**3
  milyonkup.append(a)
finish=time.time()
sure=finish-start
print(sure)

milyonkup
npmilyonkup=npmilyon**3 #1 den 1000000' kadar olan sayıların küpünü alıyor.
np.array([[1,2,3],[4,5,6],[7,8,9]])
np.array([[[1,2,3],[4,5,6],[7,8,9]],[[10,11,12],[13,14,15],[16,17,18]]])
matris=np.array([[1,2,3],[4,5,6],[7,8,9]])
print(matris)
print(liste)
liste[3]
matris[2]
matris[2,2]
matris[1,1]
matris[:]
matris[1,:]
matris[:,1] #virgülün sağı sütun solu satır.
matris[:,0]
matris[1:3,1]

######## 1'den 16 ya kadar olan sayılardan 4'e 4 BİR MATRİS
np.arange(1,17).reshape(4,4) ##np.arrange (1,17) yazarak 1dden 17 ye kadar elemanları alıyoruz reshape ile kaça kaç matris olması gerektiğini söylüyorum.
matris2=np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]])
matris2
matris2[1,1:3]
import numpy as np
import time
matris1=np.random.randint(3,size=(3,3))
matris2=np.random.randint(3,size=(3,3))
matris1
sayac=0
baslangic=time.time()
while (matris1!=matris2).any():
  matris2=np.random.randint(3,size=(3,3))
  sayac=sayac+1
bitis=time.time()
sure=bitis-baslangic
print(sayac,"adet deneme sonrası" ,sure, "saniyede eşit matrisler bulundu")
np.where(matris1<=0,9,5)
vektor=np.arange(144)
matris=vektor.reshape(12,12)
matris
np.where(matris%2==0,1,0)

